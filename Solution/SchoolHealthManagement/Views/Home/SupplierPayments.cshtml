@using SchoolHealthManagement.Controllers
@model SchoolHealthManagement.Models.SupplierPaymentRequest

@{
    ViewBag.Title = "Supplier Payment Detail";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}
<style>
    .details_container_table td input[type="password"] {
        border: 1px solid #d0d0d0;
        height: 28px;
        border-radius: 0px;
        margin: 0;
        padding: 0;
        width: 226px;
    }

    .bckl {
        color: #094B75;
        padding-left: 20px;
    }

        .bckl:hover {
            color: #40A8E8;
        }
</style>

<body>
    @if (ViewBag.SuccessMessage != null)
    {
        <div class="SuccessMsg">
            @ViewBag.SuccessMessage
        </div>
    }

</body>

<div class="container">
    <div class="row index-top-box">
        <div class="form-sub-headers">
            <h2>Supplier Payment Request</h2>

        </div>

        
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true)
            <table class="details_container_table">
                <tbody>
                <tr>
                    <td style="width: 20%; text-align: right">
                        @Html.Label("Payment Request ID")
                    </td>
                    <td style="width: 30%">
                        @Html.TextBoxFor(model => model.Id, new {@readonly = "readonly"})
                        @Html.ValidationMessageFor(model => model.Id)
                    </td>

                    <td style="width: 20%; text-align: right">@Html.Label("Request Date") </td>
                    <td style="width: 30%">
                        @Html.TextBoxFor(model => model.RequestDate, new {@readonly = "readonly"})
                        @Html.ValidationMessageFor(model => model.RequestDate)
                    </td>
                </tr>
                <tr>
                    <td style="width: 20%; text-align: right">@Html.Label("Province") </td>
                    <td style="width: 30%">
                        @Html.DropDownList("ProvinceID", "Select Province")
                        @Html.ValidationMessageFor(model => model.ProvinceID)
                    </td>

                    <td style="width: 20%; text-align: right">@Html.Label("Zone") </td>
                    <td style="width: 30%">
                        @Html.DropDownList("ZoneID", "Select Zone")
                        @Html.ValidationMessageFor(model => model.ZoneID)
                    </td>
                </tr>

                <tr>
                    <td style="width: 20%; text-align: right">@Html.Label("Year")</td>
                    <td style="width: 30%">
                        @Html.DropDownList("Year", "Select Year")
                        @Html.ValidationMessageFor(model => model.Year)
                    </td>

                    <td style="width: 20%; text-align: right">@Html.Label("Month") </td>
                    <td style="width: 30%">
                        @Html.DropDownList("Month", "Select Month")
                        @Html.ValidationMessageFor(model => model.Month)
                    </td>
                </tr>
                <tr>
                    <td style="width: 20%; text-align: right">@Html.Label("Status") </td>
                    <td style="width: 30%">
                        @Html.TextBoxFor(model => model.Status, new {@readonly = "readonly"})
                    </td>

                    <td style="width: 20%; text-align: right">@Html.Label("Total") </td>
                    <td style="width: 30%">
                        @Html.TextBoxFor(model => model.Total, new {@readonly = "readonly"})
                    </td>
                </tr>
                </tbody>
            </table>


            <span id="suplierPayTable">
                    @if (Model.PaymentDetails != null && Model.PaymentDetails.Any())
                    {
                        @Html.Partial("_SupplierDetailView", Model.PaymentDetails)
                    }
               
            </span>
            <div class="col-md-8 col-md-offset-1 hidden" id="btn_div">
                <table>
                    <tr>
                        <td style="width: 30%"></td>
                        <td style="padding-right: 10px">
                            @if (Model.Status == "Open" || Model.Status == "New")
                            {
                                <input name="Action" type="submit" value="Save" class="blue-btn"/>
                            }
                            else
                            {
                                <input name="Action" type="submit" value="Save" class="blue-btn" disabled style="background-color: grey"/>
                            }

                        </td>

                        <td style="padding-right: 10px">
                            @if (Model.Status == "New")
                            {
                                <input name="Action" type="submit" value="Approvel" class="blue-btn"/>
                            }
                            else
                            {
                                <input name="Action" type="submit" value="Approvel" class="blue-btn" disabled style="background-color: grey"/>
                            }
                        </td>
                        <td style="padding-right: 10px">
                            @if (Model.Status == "Approved-Zone")
                            {
                                <input name="Action" type="submit" value="Forwarded" class="blue-btn"/>
                            }
                            else
                            {
                                <input name="Action" type="submit" value="Forwarded" class="blue-btn" disabled style="background-color: grey"/>
                            }
                        </td>
                        <td style="padding-right: 10px">
                        @if (Model.Status == "Forwarded")
                        {

                            <input name="Action" type="submit" value="Print" class="blue-btn"/>

                        }
                        else
                        {

                            <input name="Action" type="submit" value="Print" class="blue-btn" style="background-color: grey" disabled="disabled"/>

                        }

                    </tr>
                </table>
            </div>

        }
 <br/>
        <span id="suplierHeaderDetail">
@{
    var suppliers = (List<SchoolHealthManagement.Models.SupplierPaymentRequest>) ViewBag.SupplierPaymentRequestList;

    if (suppliers != null && suppliers.Any())
    {
        @Html.Partial("_SupplierHeaderPaymentView", (IEnumerable<SchoolHealthManagement.Models.SupplierPaymentRequest>) ViewBag.SupplierPaymentRequestList)
    }
}

        </span>

        <br />
    </div>
</div>
<script type="text/javascript">
    
            $(document).ready(function () {
                //Dropdownlist Selectedchange event
                debugger;
                if ($("#suplierPayTable").children('table').length >0) {
                    $("#btn_div").removeClass('hidden');
                }
                $("#ProvinceID").change(function () {
                    $("#ZoneID").empty();
                    $("#ZoneID").append('<option value="">Select Zone</option>');
                    $("#Month").val('');
                    $("#SuppyerTable tbody tr").remove();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetZonesByProvinceJson")', // we are calling json method

                        dataType: 'json',

                        data: { ProvinceID: $("#ProvinceID").val() },
                        // here we are get value of selected country and passing same value as inputto json method GetStates.

                        success: function (zones) {
                            // branches contains the JSON formatted list
                            // of branches passed from the controller
                            $.each(zones, function (i, zone) {
                                $("#ZoneID").append('<option value="' + zone.Value + '">' +
                                     zone.Text + '</option>');
                                // here we are adding option for States

                            });
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                    return false;
                });

                $("#Year").change(function () {
                    $("#Month").val('');
                    $("#SuppyerTable tbody tr").remove();
                });

                $("#ZoneID").change(function () {
                    $("#Month").val('');
                    $("#SuppyerTable tbody tr").remove();
                });

                $("#Status").change(function () {
                    $("#Month").val('');
                    $("#SuppyerTable tbody tr").remove();
                });
                $("#Month").change(function () {
                    $("#SuppyerTable tbody tr").remove();
                    debugger;
                    if ($("#Month").val() === "" || $("#ProvinceID").val() === "" || $("#ZoneID").val() ==='' || $("#Month").val() === '') {
                        return;
                    }
                    @*debugger;
                    var req  = "@Url.Action("LoadSuppliersForPaymentJson", "Home")";
                    req = req + "?ProvinceID="+ $("#ProvinceID").val() +"&ZoneID="+$("#ZoneID").val() + "&year=" + $("#Year").val() +
                        "&Month="+ $("#Month").val() + "&PaymentReqNo="+ $("#Id").val();

                    location.href = req;*@
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("LoadSuppliersForPaymentJson")', // we are calling json method
                        data: { provinceID: $("#ProvinceID").val(), zoneID: $("#ZoneID").val(), year: $("#Year").val(), month: $("#Month").val(), paymentReqNo: $("#Id").val(), status: $("#Status").val() },
                        // here we are get value of selected country and passing same value as inputto json method GetStates.

                        success: function(payments) {
                            // branches contains the JSON formatted list
                            // of branches passed from the controller
                            //$.each(payments, function (i, payment) {
                            //    console.log(payment);
                            //    $("#SuppyerTable tbody").append('<tr><td>' + payment.CensorsID + '</td><td>' + payment.Supplier.SupplierName + '</td><td>' + payment.Supplier.BankAccountNo + '</td><td>' + payment.Supplier.BankName + '</td><td>' + payment.BranchName + '</td><td><input name="Amount-' + payment.Supplier.ID + '" value = "' + payment.Amount + '"></td></tr>');
                            //    // here we are adding option for States

                            //});
                            if (payments.status === undefined) {
                                $("#suplierPayTable").empty().append(payments);
                                $("#btn_div").removeClass('hidden');
                                return;
                            }
                            if (payments.status != undefined && !payments.status) {
                                $.confirm({
                                    icon: 'fa fa-spinner fa-spin',
                                    title: 'Warning',
                                    content: payments.message,
                                    type: 'orange',
                                    animationSpeed: 1200,
                                    animation: 'opacity',
                                    typeAnimated: true,
                                    buttons: {
                                        tryAgain: {
                                            text: 'Re-direct',
                                            btnClass: 'btn-orange',
                                            action: function () {
                                                var redirectUrl = "@Url.Action("SupplierPayments","Home")/";
                                                redirectUrl = redirectUrl + payments.id;
                                                location.href = redirectUrl;
                                            }
                                        },
                                        close: function() {

                                        }
                                    }
                                });
                                
                            } else {
                                $("#suplierPayTable").empty().append(payments);
                                $("#btn_div").removeClass('hidden');
                            }
                           
                        },
                        error: function (ex) {
                            alert('Failed to retrieve states.' + ex);
                        }
                    });
                });

            });

</script>